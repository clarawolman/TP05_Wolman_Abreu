@{
    ViewData["Title"] = "Memotest";
}

<div class="memotest-container">
    <div class="memotest-content">
        <h2>Encuentra los pares de cartas y avanza</h2>
        <div class="memotest-grid">
            @{
                var cartas = Context.Session.GetString("CartasMezcladas")?.Split(',') ?? new string[0];
                var volteadas = Context.Session.GetString("Volteadas")?.Split(',', StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToList() ?? new List<int>();
                var encontradas = Context.Session.GetString("Encontradas")?.Split(',', StringSplitOptions.RemoveEmptyEntries).Select(int.Parse).ToList() ?? new List<int>();
                var salaActual = Context.Session.GetInt32("SalaActual");
                for (int i = 0; i < cartas.Length; i++)
                {
                    var mostrarCarta = volteadas.Contains(i) || encontradas.Contains(i);
                    var imagenMostrar = mostrarCarta ? cartas[i] : "reverso.jpg";
                    <div class="card-container">
                        <form asp-action="TocarCarta" method="post" class="m-1">
                            <input type="hidden" name="index" value="@i" />
                            <button type="submit" class="btn p-0 @(mostrarCarta ? "disabled" : "")" @(mostrarCarta ? "disabled" : "")>
                                <img src="~/images/cartas/@imagenMostrar" class="carta-memotest" alt="Carta" />
                            </button>
                        </form>
                    </div>
                }
            }
        </div>
        @if (encontradas?.Count == cartas?.Length)
        {
            <div class="text-center mt-4">
                <h3>¡Felicitaciones! Has encontrado todos los pares</h3>
                <a asp-action="Sala2" class="btn-primary" id="btn-continuar-memotest">
                    Continuar a la siguiente sala
                </a>
            </div>
        }
    </div>
</div>

<audio id="audio-carta" src="/audio/abrirCartaSound.mp3"></audio>
<audio id="audio-victory" src="/audio/victory.mp3"></audio>

<script>
document.querySelectorAll('.memotest-grid form').forEach(form => {
  form.addEventListener('submit', function(e) {
    e.preventDefault();
    const audio = document.getElementById('audio-carta');
    if(audio) { audio.currentTime = 0; audio.play(); }
    // Enviar el formulario por AJAX para evitar el reload y el scroll
    const formData = new FormData(form);
    fetch(form.action, {
      method: form.method,
      body: formData,
      headers: { 'X-Requested-With': 'XMLHttpRequest' }
    }).then(() => {
      window.location.reload(); // Recargar para actualizar el tablero, pero sin scroll automático
    });
  });
});
// Sonido de victoria al ganar y al hacer clic en continuar
const btnContinuar = document.getElementById('btn-continuar-memotest');
if (btnContinuar) {
  // Reproducir sonido de victoria cuando aparece el botón
  document.getElementById('audio-victory').play().catch(e => console.log('Audio no pudo reproducirse:', e));
  // Reproducir sonido de victoria al hacer clic en continuar
  btnContinuar.addEventListener('click', function() {
    const audio = document.getElementById('audio-victory');
    if (audio) { 
      audio.currentTime = 0; 
      audio.play().catch(e => console.log('Audio no pudo reproducirse:', e));
    }
  });
}
</script> 